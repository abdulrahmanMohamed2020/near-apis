<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="26" passed="24" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-01-16T01:40:33 EET" name="Command line suite" finished-at="2022-01-16T01:41:35 EET" duration-ms="62572">
    <groups>
    </groups>
    <test started-at="2022-01-16T01:40:33 EET" name="Command line test" finished-at="2022-01-16T01:41:35 EET" duration-ms="62572">
      <class name="tests.usersTests.TestUserIntegration">
        <test-method is-config="true" signature="init()[pri:0, instance:tests.usersTests.TestUserIntegration@49139829]" started-at="2022-01-16T01:41:18 EET" name="init" finished-at="2022-01-16T01:41:18 EET" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method signature="testCreateUser()[pri:0, instance:tests.usersTests.TestUserIntegration@49139829]" started-at="2022-01-16T01:41:18 EET" name="testCreateUser" finished-at="2022-01-16T01:41:20 EET" duration-ms="1864" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateUser -->
        <test-method signature="testGetUser()[pri:1, instance:tests.usersTests.TestUserIntegration@49139829]" started-at="2022-01-16T01:41:20 EET" name="testGetUser" finished-at="2022-01-16T01:41:21 EET" depends-on-methods="tests.usersTests.TestUserIntegration.testCreateUser" duration-ms="1478" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The Full Name is empty did not expect [] but found []]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The Full Name is empty did not expect [] but found []
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failEquals(Assert.java:1041)
at org.testng.Assert.assertNotEqualsImpl(Assert.java:147)
at org.testng.Assert.assertNotEquals(Assert.java:1531)
at tests.usersTests.TestUserIntegration.testGetUser(TestUserIntegration.java:40)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetUser -->
        <test-method signature="testUpdateUser()[pri:2, instance:tests.usersTests.TestUserIntegration@49139829]" started-at="2022-01-16T01:41:21 EET" name="testUpdateUser" finished-at="2022-01-16T01:41:23 EET" depends-on-methods="tests.usersTests.TestUserIntegration.testCreateUser" duration-ms="2361" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdateUser -->
        <test-method signature="testDeleteUser()[pri:3, instance:tests.usersTests.TestUserIntegration@49139829]" started-at="2022-01-16T01:41:23 EET" name="testDeleteUser" finished-at="2022-01-16T01:41:24 EET" depends-on-methods="tests.usersTests.TestUserIntegration.testCreateUser" duration-ms="817" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeleteUser -->
        <test-method signature="verifyTheUserStatusAfterDeleting()[pri:4, instance:tests.usersTests.TestUserIntegration@49139829]" started-at="2022-01-16T01:41:24 EET" name="verifyTheUserStatusAfterDeleting" finished-at="2022-01-16T01:41:25 EET" depends-on-methods="tests.usersTests.TestUserIntegration.testCreateUser" duration-ms="827" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTheUserStatusAfterDeleting -->
      </class> <!-- tests.usersTests.TestUserIntegration -->
      <class name="tests.contactsTests.TestContacts">
        <test-method is-config="true" signature="init()[pri:0, instance:tests.contactsTests.TestContacts@223191a6]" started-at="2022-01-16T01:41:02 EET" name="init" finished-at="2022-01-16T01:41:03 EET" duration-ms="1652" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method signature="testCreateContact()[pri:0, instance:tests.contactsTests.TestContacts@223191a6]" started-at="2022-01-16T01:41:03 EET" name="testCreateContact" finished-at="2022-01-16T01:41:05 EET" duration-ms="1645" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateContact -->
        <test-method signature="testGetContactsOfAnUser()[pri:0, instance:tests.contactsTests.TestContacts@223191a6]" started-at="2022-01-16T01:41:05 EET" name="testGetContactsOfAnUser" finished-at="2022-01-16T01:41:12 EET" depends-on-methods="tests.contactsTests.TestContacts.testCreateContact" duration-ms="6997" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetContactsOfAnUser -->
        <test-method signature="testImportOneOrMoreContacts()[pri:0, instance:tests.contactsTests.TestContacts@223191a6]" started-at="2022-01-16T01:41:12 EET" name="testImportOneOrMoreContacts" finished-at="2022-01-16T01:41:13 EET" depends-on-methods="tests.contactsTests.TestContacts.testCreateContact" duration-ms="871" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testImportOneOrMoreContacts -->
        <test-method signature="testGetContact()[pri:1, instance:tests.contactsTests.TestContacts@223191a6]" started-at="2022-01-16T01:41:13 EET" name="testGetContact" finished-at="2022-01-16T01:41:14 EET" depends-on-methods="tests.contactsTests.TestContacts.testCreateContact" duration-ms="860" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetContact -->
        <test-method signature="testUpdateContact()[pri:2, instance:tests.contactsTests.TestContacts@223191a6]" started-at="2022-01-16T01:41:14 EET" name="testUpdateContact" finished-at="2022-01-16T01:41:15 EET" depends-on-methods="tests.contactsTests.TestContacts.testCreateContact" duration-ms="1521" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdateContact -->
        <test-method signature="testDeleteContact()[pri:3, instance:tests.contactsTests.TestContacts@223191a6]" started-at="2022-01-16T01:41:15 EET" name="testDeleteContact" finished-at="2022-01-16T01:41:16 EET" depends-on-methods="tests.contactsTests.TestContacts.testCreateContact" duration-ms="858" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeleteContact -->
        <test-method signature="verifyTheContactStatusAfterDeleting()[pri:4, instance:tests.contactsTests.TestContacts@223191a6]" started-at="2022-01-16T01:41:16 EET" name="verifyTheContactStatusAfterDeleting" finished-at="2022-01-16T01:41:17 EET" depends-on-methods="tests.contactsTests.TestContacts.testCreateContact" duration-ms="839" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTheContactStatusAfterDeleting -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.contactsTests.TestContacts@223191a6]" started-at="2022-01-16T01:41:17 EET" name="tearDown" finished-at="2022-01-16T01:41:18 EET" duration-ms="826" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.contactsTests.TestContacts -->
      <class name="tests.nftsTests.TestNfts">
        <test-method is-config="true" signature="init()[pri:0, instance:tests.nftsTests.TestNfts@9597028]" started-at="2022-01-16T01:41:25 EET" name="init" finished-at="2022-01-16T01:41:27 EET" duration-ms="1668" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method signature="testCreateNft()[pri:0, instance:tests.nftsTests.TestNfts@9597028]" started-at="2022-01-16T01:41:27 EET" name="testCreateNft" finished-at="2022-01-16T01:41:28 EET" duration-ms="1223" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateNft -->
        <test-method signature="testGetAllNfts()[pri:0, instance:tests.nftsTests.TestNfts@9597028]" started-at="2022-01-16T01:41:28 EET" name="testGetAllNfts" finished-at="2022-01-16T01:41:30 EET" duration-ms="2043" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code <200> but was <500>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code <200> but was <500>.

at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:72)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:105)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:59)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:263)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:493)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:674)
at jdk.internal.reflect.GeneratedMethodAccessor135.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:193)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:61)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:126)
at io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:134)
at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)
at io.restassured.internal.ValidatableResponseImpl.super$2$statusCode(ValidatableResponseImpl.groovy)
at jdk.internal.reflect.GeneratedMethodAccessor134.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:107)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1268)
at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodOnSuperN(ScriptBytecodeAdapter.java:144)
at io.restassured.internal.ValidatableResponseImpl.statusCode(ValidatableResponseImpl.groovy:142)
at io.restassured.internal.ValidatableResponseImpl.statusCode(ValidatableResponseImpl.groovy)
at helpers.NftServiceHelper.getAllNftDetails(NftServiceHelper.java:43)
at tests.nftsTests.TestNfts.testGetAllNfts(TestNfts.java:43)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetAllNfts -->
        <test-method signature="testGetSingleNft()[pri:1, instance:tests.nftsTests.TestNfts@9597028]" started-at="2022-01-16T01:41:30 EET" name="testGetSingleNft" finished-at="2022-01-16T01:41:31 EET" depends-on-methods="tests.nftsTests.TestNfts.testCreateNft" duration-ms="888" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetSingleNft -->
        <test-method signature="testUpdateNft()[pri:2, instance:tests.nftsTests.TestNfts@9597028]" started-at="2022-01-16T01:41:31 EET" name="testUpdateNft" finished-at="2022-01-16T01:41:33 EET" depends-on-methods="tests.nftsTests.TestNfts.testCreateNft" duration-ms="1646" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdateNft -->
        <test-method signature="testDeleteNft()[pri:3, instance:tests.nftsTests.TestNfts@9597028]" started-at="2022-01-16T01:41:33 EET" name="testDeleteNft" finished-at="2022-01-16T01:41:33 EET" depends-on-methods="tests.nftsTests.TestNfts.testCreateNft" duration-ms="823" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeleteNft -->
        <test-method signature="verifyTheNftStatusAfterDeleting()[pri:4, instance:tests.nftsTests.TestNfts@9597028]" started-at="2022-01-16T01:41:33 EET" name="verifyTheNftStatusAfterDeleting" finished-at="2022-01-16T01:41:34 EET" depends-on-methods="tests.nftsTests.TestNfts.testDeleteNft" duration-ms="826" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTheNftStatusAfterDeleting -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.nftsTests.TestNfts@9597028]" started-at="2022-01-16T01:41:34 EET" name="tearDown" finished-at="2022-01-16T01:41:35 EET" duration-ms="839" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.nftsTests.TestNfts -->
      <class name="tests.transactionsTests.TestUserTransactionsIntegration">
        <test-method is-config="true" signature="init()[pri:0, instance:tests.transactionsTests.TestUserTransactionsIntegration@4ec4f3a0]" started-at="2022-01-16T01:40:43 EET" name="init" finished-at="2022-01-16T01:40:49 EET" duration-ms="5900" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method signature="testCreateTransaction()[pri:0, instance:tests.transactionsTests.TestUserTransactionsIntegration@4ec4f3a0]" started-at="2022-01-16T01:40:49 EET" name="testCreateTransaction" finished-at="2022-01-16T01:40:51 EET" duration-ms="1518" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateTransaction -->
        <test-method signature="testGetUserTransactions()[pri:1, instance:tests.transactionsTests.TestUserTransactionsIntegration@4ec4f3a0]" started-at="2022-01-16T01:40:51 EET" name="testGetUserTransactions" finished-at="2022-01-16T01:40:52 EET" depends-on-methods="tests.transactionsTests.TestUserTransactionsIntegration.testCreateTransaction" duration-ms="1069" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetUserTransactions -->
        <test-method signature="testGetNftTransactions()[pri:3, instance:tests.transactionsTests.TestUserTransactionsIntegration@4ec4f3a0]" started-at="2022-01-16T01:40:52 EET" name="testGetNftTransactions" finished-at="2022-01-16T01:40:54 EET" depends-on-methods="tests.transactionsTests.TestUserTransactionsIntegration.testCreateTransaction" duration-ms="2066" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNftTransactions -->
        <test-method signature="testUpdateTransaction()[pri:4, instance:tests.transactionsTests.TestUserTransactionsIntegration@4ec4f3a0]" started-at="2022-01-16T01:40:54 EET" name="testUpdateTransaction" finished-at="2022-01-16T01:40:55 EET" depends-on-methods="tests.transactionsTests.TestUserTransactionsIntegration.testCreateTransaction" duration-ms="1555" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdateTransaction -->
        <test-method signature="testDeleteTransaction()[pri:5, instance:tests.transactionsTests.TestUserTransactionsIntegration@4ec4f3a0]" started-at="2022-01-16T01:40:55 EET" name="testDeleteTransaction" finished-at="2022-01-16T01:40:57 EET" depends-on-methods="tests.transactionsTests.TestUserTransactionsIntegration.testCreateTransaction" duration-ms="1549" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeleteTransaction -->
        <test-method signature="verifyTheTransactionStatusAfterDeleting()[pri:6, instance:tests.transactionsTests.TestUserTransactionsIntegration@4ec4f3a0]" started-at="2022-01-16T01:40:57 EET" name="verifyTheTransactionStatusAfterDeleting" finished-at="2022-01-16T01:40:58 EET" depends-on-methods="tests.transactionsTests.TestUserTransactionsIntegration.testCreateTransaction" duration-ms="1456" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTheTransactionStatusAfterDeleting -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.transactionsTests.TestUserTransactionsIntegration@4ec4f3a0]" started-at="2022-01-16T01:40:58 EET" name="tearDown" finished-at="2022-01-16T01:41:02 EET" duration-ms="3340" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.transactionsTests.TestUserTransactionsIntegration -->
      <class name="tests.TestLogin">
        <test-method is-config="true" signature="init()[pri:0, instance:tests.TestLogin@4550bb58]" started-at="2022-01-16T01:40:33 EET" name="init" finished-at="2022-01-16T01:40:34 EET" duration-ms="1784" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method signature="testCreateLoginOtp()[pri:0, instance:tests.TestLogin@4550bb58]" started-at="2022-01-16T01:40:34 EET" name="testCreateLoginOtp" finished-at="2022-01-16T01:40:40 EET" duration-ms="6031" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateLoginOtp -->
        <test-method signature="testVerifyLoginOtp()[pri:0, instance:tests.TestLogin@4550bb58]" started-at="2022-01-16T01:40:41 EET" name="testVerifyLoginOtp" finished-at="2022-01-16T01:40:43 EET" duration-ms="2583" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVerifyLoginOtp -->
      </class> <!-- tests.TestLogin -->
    </test> <!-- Command line test -->
  </suite> <!-- Command line suite -->
</testng-results>
